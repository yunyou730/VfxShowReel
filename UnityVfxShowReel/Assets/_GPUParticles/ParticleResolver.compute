#pragma kernel CSMain

struct Particle
{
    float2 position;
    float2 velocity;
};

float dt;
int shouldMove;
float2 mousePosition;

RWStructuredBuffer<Particle> Particles;

[numthreads(1024,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    if (shouldMove > 0)
    {
        // 看懂了：
        // 构造一个  从各个粒子 指向 鼠标位置的向量 v, 然后拿到 v长度的平方 d2
        // 根据 v/d2, 和 速度常数 5 * deltaTime, 来计算一个 指向鼠标位置 的 2d向量, 表示 速度变化 
        // 让 current velocity (也是一个2d向量) ， 加上 速度变化, 从而每一帧 影响 粒子的速度
        // 这样 让 粒子看起来， 仿佛是在被 鼠标点击位置 所指引， 并且还有点 惯性 
        float2 v = float2(mousePosition.x - Particles[id.x].position.x,mousePosition.y - Particles[id.x].position.y);
        float2 d2 = v.x * v.x + v.y * v.y;
        Particles[id.x].velocity = Particles[id.x].velocity + 5 * (v / d2) * dt;
    }
    // else
    // {
    //     Particles[id.x].velocity = Particles[id.x].velocity - 0.2 * dt;
    // }
    Particles[id.x].position = Particles[id.x].position + Particles[id.x].velocity * dt;
    
}
